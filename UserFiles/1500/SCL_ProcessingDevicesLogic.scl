//--- Generated by OneClick Automation SourceGenerator v.3.0 ---
Не удалось найти часть пути "S:\Simatek\OneClick\PLC1\sources\CodeTemplates\openSCLcode.txt".
FOR i:=1 TO 5 BY 1 DO
Logic_DRV(DRV:="13Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="14Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="15Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="16Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="17Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="20Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="28Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="35Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="49Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="51Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="52Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="53Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="55Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="61Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="62Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="63Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="64Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="68Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="69Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="70Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="71Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="73Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="74Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="75Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="78Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="83Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="84Y".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="11M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="12M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="21M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="22M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="23M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="28M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="30M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="34M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="43M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="49M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="54M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="55M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="56M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="57M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="58M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="60M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="62M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="63M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="64M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="67M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="72M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="77M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="78M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="81M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="86M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="88M".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="12MXR_2S".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="14MXR_2S".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="16MXR_2S".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="17MXR_2S".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="31MXR_2S".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="32MXR_2S".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="79MXR_2S".DRV[i],Clock:=clk); // 5
Logic_DRV(DRV:="80MXR_2S".DRV[i],Clock:=clk); // 5
END_FOR; 

FOR i:=1 TO 10 BY 1 DO
Logic_DRV(DRV:="21Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="22Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="23Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="24Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="25Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="26Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="30Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="31Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="32Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="34Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="44Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="45Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="46Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="47Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="54Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="67Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="77Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="79Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="80Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="81Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="85Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="86Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="88Y".DRV[i],Clock:=clk); // 10
Logic_DRV(DRV:="29M".DRV[i],Clock:=clk); // 10
END_FOR; 

FOR i:=1 TO 15 BY 1 DO
Logic_DRV(DRV:="56Y".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="57Y".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="58Y".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="24MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="25MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="26MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="44MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="45MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="46MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="47MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="68MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="69MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="70MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="71MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="73MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="74MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="75MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="83MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="84MXR_2S".DRV[i],Clock:=clk); // 15
Logic_DRV(DRV:="85MXR_2S".DRV[i],Clock:=clk); // 15
END_FOR; 

FOR i:=1 TO 20 BY 1 DO
END_FOR; 

FOR i:=1 TO 25 BY 1 DO
Logic_DRV(DRV:="60Y".DRV[i],Clock:=clk); // 25
Logic_DRV(DRV:="72Y".DRV[i],Clock:=clk); // 25
END_FOR; 

FOR i:=1 TO 30 BY 1 DO
Logic_DRV(DRV:="43Y".DRV[i],Clock:=clk); // 30
END_FOR; 

FOR i:=1 TO 35 BY 1 DO
Logic_DRV(DRV:="29Y".DRV[i],Clock:=clk); // 35
END_FOR; 

FOR i:=1 TO 55 BY 1 DO
Logic_DRV(DRV:="11Y".DRV[i],Clock:=clk); // 55
END_FOR; 

FOR i:=1 TO 60 BY 1 DO
END_FOR; 

FOR i:=1 TO 80 BY 1 DO
Logic_DRV(DRV:="12Y".DRV[i],Clock:=clk); // 80
END_FOR; 

END_FUNCTION
