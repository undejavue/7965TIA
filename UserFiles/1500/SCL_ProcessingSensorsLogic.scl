//--- Generated by OneClick Automation SourceGenerator v.3.0 ---
Не удалось найти часть пути "S:\Simatek\OneClick\PLC1\sources\CodeTemplates\openSCLcode.txt".
FOR i:=1 TO 5 BY 1 DO
Logic_SNC(SNC:="11SNC".SNC[i]);  // 5
Logic_SNC(SNC:="12SNC".SNC[i]);  // 5
Logic_SNC(SNC:="21SNC".SNC[i]);  // 5
Logic_SNC(SNC:="22SNC".SNC[i]);  // 5
Logic_SNC(SNC:="23SNC".SNC[i]);  // 5
Logic_SNC(SNC:="51SNC".SNC[i]);  // 5
Logic_SNC(SNC:="54SNC".SNC[i]);  // 5
Logic_SNC(SNC:="67SNC".SNC[i]);  // 5
Logic_SNC(SNC:="72SNC".SNC[i]);  // 5
Logic_SNC(SNC:="77SNC".SNC[i]);  // 5
Logic_SNS(SNS:="13A".SNS[i]);  // 5
Logic_SNS(SNS:="14A".SNS[i]);  // 5
Logic_SNS(SNS:="15A".SNS[i]);  // 5
Logic_SNS(SNS:="16A".SNS[i]);  // 5
Logic_SNS(SNS:="17A".SNS[i]);  // 5
Logic_SNS(SNS:="24A".SNS[i]);  // 5
Logic_SNS(SNS:="25A".SNS[i]);  // 5
Logic_SNS(SNS:="26A".SNS[i]);  // 5
Logic_SNS(SNS:="31A".SNS[i]);  // 5
Logic_SNS(SNS:="32A".SNS[i]);  // 5
Logic_SNS(SNS:="34A".SNS[i]);  // 5
Logic_SNS(SNS:="44A".SNS[i]);  // 5
Logic_SNS(SNS:="45A".SNS[i]);  // 5
Logic_SNS(SNS:="46A".SNS[i]);  // 5
Logic_SNS(SNS:="47A".SNS[i]);  // 5
Logic_SNS(SNS:="51A".SNS[i]);  // 5
Logic_SNS(SNS:="52A".SNS[i]);  // 5
Logic_SNS(SNS:="53A".SNS[i]);  // 5
Logic_SNS(SNS:="54A".SNS[i]);  // 5
Logic_SNS(SNS:="56A".SNS[i]);  // 5
Logic_SNS(SNS:="57A".SNS[i]);  // 5
Logic_SNS(SNS:="58A".SNS[i]);  // 5
Logic_SNS(SNS:="61A".SNS[i]);  // 5
Logic_SNS(SNS:="68A".SNS[i]);  // 5
Logic_SNS(SNS:="69A".SNS[i]);  // 5
Logic_SNS(SNS:="70A".SNS[i]);  // 5
Logic_SNS(SNS:="71A".SNS[i]);  // 5
Logic_SNS(SNS:="73A".SNS[i]);  // 5
Logic_SNS(SNS:="74A".SNS[i]);  // 5
Logic_SNS(SNS:="75A".SNS[i]);  // 5
Logic_SNS(SNS:="77A".SNS[i]);  // 5
Logic_SNS(SNS:="78A".SNS[i]);  // 5
Logic_SNS(SNS:="79A".SNS[i]);  // 5
Logic_SNS(SNS:="80A".SNS[i]);  // 5
Logic_SNS(SNS:="81A".SNS[i]);  // 5
Logic_SNS(SNS:="83A".SNS[i]);  // 5
Logic_SNS(SNS:="84A".SNS[i]);  // 5
Logic_SNS(SNS:="85A".SNS[i]);  // 5
Logic_SNS(SNS:="86A".SNS[i]);  // 5
Logic_SNS(SNS:="88A".SNS[i]);  // 5
END_FOR; 

FOR i:=1 TO 10 BY 1 DO
Logic_SNC(SNC:="29SNC".SNC[i]);  // 10
Logic_SNC(SNC:="43SNC".SNC[i]);  // 10
Logic_SNS(SNS:="21A".SNS[i]);  // 10
Logic_SNS(SNS:="22A".SNS[i]);  // 10
Logic_SNS(SNS:="23A".SNS[i]);  // 10
Logic_SNS(SNS:="30A".SNS[i]);  // 10
Logic_SNS(SNS:="67A".SNS[i]);  // 10
END_FOR; 

FOR i:=1 TO 15 BY 1 DO
Logic_SNS(SNS:="72A".SNS[i]);  // 15
END_FOR; 

FOR i:=1 TO 20 BY 1 DO
Logic_SNS(SNS:="43A".SNS[i]);  // 20
END_FOR; 

FOR i:=1 TO 25 BY 1 DO
Logic_SNS(SNS:="11A".SNS[i]);  // 25
Logic_SNS(SNS:="29A".SNS[i]);  // 25
END_FOR; 

FOR i:=1 TO 30 BY 1 DO
Logic_SNS(SNS:="12A".SNS[i]);  // 30
END_FOR; 

FOR i:=1 TO 35 BY 1 DO
END_FOR; 

FOR i:=1 TO 55 BY 1 DO
END_FOR; 

FOR i:=1 TO 60 BY 1 DO
END_FOR; 

FOR i:=1 TO 80 BY 1 DO
END_FOR; 

END_FUNCTION
